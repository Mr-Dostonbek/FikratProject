{"version":3,"file":"static/js/366.17ab4b62.chunk.js","mappings":"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","sources":["api/apiUrls.ts","api/config.ts","api/baseAPI.ts","components/PaginationRounded/index.tsx","pages/Media/MediaCard/index.tsx","pages/Media/index.tsx"],"sourcesContent":["export const categoryUrl = \"/category\";\nexport const languageUrl = \"/language\";\nexport const authorUrl = \"/author\";\nexport const bookUrl = \"/book\";\nexport const audioBookUrl = \"/audio-book\";\nexport const photoUrl = \"/photo\";\nexport const wiseWordUrl = \"/proverb\";\nexport const mediaUrl = \"/media\";\nexport const articleAuthorUrl = \"/article-author\";\nexport const articleUrl = \"/article\";\nexport const allBookUrl = \"/all-book\";","\nimport axios from \"axios\";\nimport { API_BASE_URL } from \"../constants\";\nimport { getLang } from \"../helpers\";\n\nexport const request = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    Accept: 'application/json',\n    \"Accept-Language\": getLang()\n  }\n  // timeout: 10000,\n});\n\n// request.interceptors.request.use((config) => {\n//   config.headers.Authorization = 'Bearer ' + getAccessToken()\n//   return config;\n// })","import { AxiosPromise } from \"axios\";\n// import { PER_PAGE } from \"../constants\";\nimport { request } from \"./config\";\n\ntype FetchWithPaginationType = {\n  url: string;\n  page?: number;\n  params?: object;\n}\n\ninterface IBaseApi {\n  find<T>(id: string | undefined, url: string, showNotification?: boolean): AxiosPromise<T>;\n  fetchAll<T>(url: string, data?: object): AxiosPromise<T>;\n  fetchWithParams<T>(url: string, params: object): AxiosPromise<T>;\n  fetchWithPagination<T>(args: FetchWithPaginationType): AxiosPromise<T>;\n}\n\n\nconst baseAPI: IBaseApi = {\n  find<T>(id: string, url: string) {\n    return request.get<T>(`${url}/${id}`);\n  },\n  async fetchAll<T>(url: string, data: object = {}) {\n    const res = await request.get<T>(url, data,);\n    return res;\n  },\n  async fetchWithParams<T>(url: string, params: object = {}) {\n    const res = await request.get<T>(url, { params },);\n    return res;\n  },\n  async fetchWithPagination<T>({\n    url,\n    page = 1,\n    params = {},\n\n  }: FetchWithPaginationType) {\n    const res = await request.get<T>(url, {\n      params: { ...params, page },\n    });\n    return res;\n  }\n}\n\nexport default baseAPI;","import * as React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport \"./style.scss\";\n\ninterface IPaginationRounded {\n  count: number | undefined,\n  handleChange: (event: any, value: number) => void,\n  page: number\n}\n\nexport default function PaginationRounded(props: IPaginationRounded) {\n  const { count, handleChange, page } = props;\n  return (\n    <div className={\"pagination_wrapper\"}>\n      <Stack spacing={2}>\n        <Pagination onChange={handleChange} page={page} count={count} variant=\"outlined\" shape=\"rounded\" />\n      </Stack>\n    </div>\n  );\n}\n","import React from 'react'\nimport { Button } from '@mui/material'\nimport ReactPlayer from 'react-player';\nimport Loading from '../../../components/Loading';\nimport EventIcon from '@mui/icons-material/Event';\n\ninterface IMediaCard {\n  name: string,\n  url: string,\n  date: string\n}\n\nfunction MediaCard(props: IMediaCard) {\n  const { name, url, date } = props;\n\n  const formatedDate = `${new Date(date).getHours().toString().padStart(2, '0')}:${new Date(date).getMinutes().toString().padStart(2, '0')} / ${(new Date(date).getMonth() + 1).toString().padStart(2, '0')}.${new Date(date).getDate().toString().padStart(2, '0')}.${new Date(date).getFullYear().toString().padStart(4, '0')}`;\n\n  return (\n    <div className=\"youtube_video_card card mb-3\">\n      <div className=\"video_wrapper\">\n        <ReactPlayer fallback={<Loading height=\"400px\" />} controls url={url} width=\"100%\" height=\"100%\" />\n      </div>\n      <div className=\"video_desc p-2\">\n        <h3 className=\"about_title text-dark\">\n          {name.length > 60 ? `${name.slice(0,60)}...` : name}\n        </h3>\n        <Button className=\"date_btn\">\n          <EventIcon /> {formatedDate}</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default MediaCard;","import React, { useCallback, useState, useEffect } from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\nimport { mediaUrl } from '../../api/apiUrls'\nimport baseAPI from '../../api/baseAPI'\nimport Loading from '../../components/Loading'\nimport PaginationRounded from '../../components/PaginationRounded'\nimport { useT } from '../../custom/hooks/useT'\nimport { MediasType } from '../../types'\nimport MediaCard from './MediaCard'\nimport \"./style.scss\";\n\n\nfunction Media() {\n  const { t } = useT();\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState<number>(1);\n  const [medias, setMedias] = useState<MediasType>();\n\n  const handleChange = (event: any, value: number) => {\n    setPage(value);\n  };\n\n  const getMedias = useCallback(() => {\n    setLoading(true)\n    baseAPI\n      .fetchWithPagination<MediasType>({ url: mediaUrl, page })\n      .then(res => {\n        setMedias(res.data);\n        setLoading(false);\n      })\n      .catch(error => console.log(\"error\", error))\n  }, [page]);\n\n  useEffect(() => {\n    getMedias()\n  }, [getMedias]);\n\n  // pagination almashganda tepaga otish \n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    })\n  }, [page])\n\n  return (\n    <section className=\"media\">\n      <Container>\n        <Row>\n          <h2 className=\"title text-dark\">\n            {t(\"media\")}\n          </h2>\n        </Row>\n        <Row>\n          {\n            loading ? (\n              <Loading height=\"400px\" />\n            ) :\n              medias?.results?.map((video, idx) => (\n                <Col key={idx} md={6} lg={4}>\n                  <MediaCard name={video.title} url={video.video} date={video.created_at} />\n                </Col>\n              ))\n          }\n        </Row>\n        <Row>\n          {\n            medias && medias?.num_pages > 1 ? (\n              <PaginationRounded handleChange={handleChange} page={page} count={medias?.num_pages} />\n            ) : null\n          }\n        </Row>\n      </Container>\n    </section>\n  )\n}\n\nexport default Media"],"names":["categoryUrl","languageUrl","authorUrl","bookUrl","audioBookUrl","photoUrl","wiseWordUrl","mediaUrl","articleUrl","allBookUrl","request","axios","baseURL","API_BASE_URL","headers","Accept","getLang","baseAPI","find","id","url","get","fetchAll","data","res","fetchWithParams","params","fetchWithPagination","page","PaginationRounded","props","count","handleChange","className","Stack","spacing","Pagination","onChange","variant","shape","name","date","formatedDate","Date","getHours","toString","padStart","getMinutes","getMonth","getDate","getFullYear","fallback","Loading","height","controls","width","length","slice","Button","Event","t","useT","useState","loading","setLoading","setPage","medias","setMedias","getMedias","useCallback","then","catch","error","console","log","useEffect","window","scrollTo","top","behavior","Container","Row","results","map","video","idx","Col","md","lg","title","created_at","num_pages","event","value"],"sourceRoot":""}