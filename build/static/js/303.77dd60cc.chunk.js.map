{"version":3,"file":"static/js/303.77dd60cc.chunk.js","mappings":"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","sources":["api/apiUrls.ts","api/config.ts","api/baseAPI.ts","components/AuthorsFilterCard/index.tsx","components/BookCard/index.tsx","components/CategoriesFilterCard/index.tsx","components/PaginationRounded/index.tsx","pages/BooksWorld/index.tsx","pages/EmptySearchResult/index.tsx"],"sourcesContent":["export const categoryUrl = \"/category\";\nexport const languageUrl = \"/language\";\nexport const authorUrl = \"/author\";\nexport const bookUrl = \"/book\";\nexport const audioBookUrl = \"/audio-book\";\nexport const photoUrl = \"/photo\";\nexport const wiseWordUrl = \"/proverb\";\nexport const mediaUrl = \"/media\";\nexport const articleAuthorUrl = \"/article-author\";\nexport const articleUrl = \"/article\";\nexport const allBookUrl = \"/all-book\";","\nimport axios from \"axios\";\nimport { API_BASE_URL } from \"../constants\";\nimport { getLang } from \"../helpers\";\n\nexport const request = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    Accept: 'application/json',\n    \"Accept-Language\": getLang()\n  }\n  // timeout: 10000,\n});\n\n// request.interceptors.request.use((config) => {\n//   config.headers.Authorization = 'Bearer ' + getAccessToken()\n//   return config;\n// })","import { AxiosPromise } from \"axios\";\n// import { PER_PAGE } from \"../constants\";\nimport { request } from \"./config\";\n\ntype FetchWithPaginationType = {\n  url: string;\n  page?: number;\n  params?: object;\n}\n\ninterface IBaseApi {\n  find<T>(id: string | undefined, url: string, showNotification?: boolean): AxiosPromise<T>;\n  fetchAll<T>(url: string, data?: object): AxiosPromise<T>;\n  fetchWithParams<T>(url: string, params: object): AxiosPromise<T>;\n  fetchWithPagination<T>(args: FetchWithPaginationType): AxiosPromise<T>;\n}\n\n\nconst baseAPI: IBaseApi = {\n  find<T>(id: string, url: string) {\n    return request.get<T>(`${url}/${id}`);\n  },\n  async fetchAll<T>(url: string, data: object = {}) {\n    const res = await request.get<T>(url, data,);\n    return res;\n  },\n  async fetchWithParams<T>(url: string, params: object = {}) {\n    const res = await request.get<T>(url, { params },);\n    return res;\n  },\n  async fetchWithPagination<T>({\n    url,\n    page = 1,\n    params = {},\n\n  }: FetchWithPaginationType) {\n    const res = await request.get<T>(url, {\n      params: { ...params, page },\n    });\n    return res;\n  }\n}\n\nexport default baseAPI;","import React from 'react'\nimport { Checkbox, Divider, FormControlLabel } from '@mui/material';\nimport { Form } from 'react-bootstrap';\nimport { useT } from '../../custom/hooks/useT';\nimport \"./style.scss\";\nimport { AuthorsType, AuthorType } from '../../types';\n\ninterface IAuthorsFilterCard {\n  title: string,\n  checkboxes?: AuthorsType,\n  className?: string,\n  onCategoryChange: (obj: any) => void\n\n}\n\n\nfunction AuthorsFilterCard(props: IAuthorsFilterCard) {\n  const { t } = useT()\n  const { title, checkboxes, className = \"\", onCategoryChange } = props;\n\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onCategoryChange({ [event.target.name]: event.target.checked })\n  };\n\n  return (\n    <div className={`filter_card ${className}`}>\n      <h4 className=\"footer_title color_till\">\n        {t(title)}\n      </h4>\n      <Divider />\n      <Form className={`filter_form ${className}`}>\n        {\n          checkboxes?.map((checkbox: AuthorType, idx: any) => (\n            <React.Fragment key={idx}>\n              <FormControlLabel\n                control={\n                  <Checkbox onChange={handleChange} name={checkbox.id} />\n                }\n                label={checkbox.full_name}\n              />\n              <Divider />\n            </React.Fragment>\n          ))\n        }\n      </Form>\n    </div>\n  )\n}\n\nexport default AuthorsFilterCard","import React from 'react'\nimport { Card } from 'react-bootstrap';\nimport \"./style.scss\"\n\ninterface IBookCard {\n  image: string,\n  author: {\n    id: string,\n    full_name: string\n  }\n  title: string\n}\n\nfunction BookCard(props: IBookCard) {\n  const { image, author, title } = props;\n\n  return (\n    <div className=\"book_card\">\n      <Card style={{ width: '100%' }}>\n        <Card.Img variant=\"top\" src={image} />\n        <Card.Body>\n          <Card.Text>\n            <p className=\"card_text\">\n              {author.full_name} :\n            </p>\n            <p className=\"card_text\">\n              {title}\n            </p>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </div>\n  )\n}\n\nexport default BookCard","import React from 'react'\nimport { Divider, FormControlLabel } from '@mui/material';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport { useT } from '../../custom/hooks/useT';\nimport \"./style.scss\";\n\ninterface ICategoriesFilterCard {\n  title: string,\n  checkboxes?: ICheckbox[],\n  className?: string,\n  onCategoryChange: (obj: any) => void\n}\n\ninterface ICheckbox {\n  id: string,\n  name: string\n}\n\nfunction CategoriesFilterCard(props: ICategoriesFilterCard) {\n  const { t } = useT()\n  const { title, checkboxes, className = \"\", onCategoryChange } = props;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onCategoryChange({ [event.target.name]: event.target.checked })\n  }\n\n  return (\n    <div className={`filter_card ${className}`}>\n      <h4 className=\"footer_title color_till\">\n        {t(title)}\n      </h4>\n      <Divider />\n      <FormGroup className={`filter_form ${className}`}>\n        {\n          checkboxes?.map((checkbox: ICheckbox, idx: any) => (\n            <React.Fragment>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    onChange={handleChange}\n                    name={checkbox.id}\n                  />\n                }\n                label={checkbox.name}\n              />\n              <Divider />\n            </React.Fragment>\n          ))\n        }\n      </FormGroup>\n    </div>\n  )\n}\n\nexport default CategoriesFilterCard","import * as React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport \"./style.scss\";\n\ninterface IPaginationRounded {\n  count: number | undefined,\n  handleChange: (event: any, value: number) => void,\n  page: number\n}\n\nexport default function PaginationRounded(props: IPaginationRounded) {\n  const { count, handleChange, page } = props;\n  return (\n    <div className={\"pagination_wrapper\"}>\n      <Stack spacing={2}>\n        <Pagination onChange={handleChange} page={page} count={count} variant=\"outlined\" shape=\"rounded\" />\n      </Stack>\n    </div>\n  );\n}\n","import React, { useCallback, useState, useEffect } from 'react'\nimport { Container, Col, Row } from 'react-bootstrap';\nimport BookCard from '../../components/BookCard';\n// import FilterCard from '../../components/LanguagesFilterCard';\nimport AuthorsFilterCard from '../../components/AuthorsFilterCard';\nimport PaginationRounded from '../../components/PaginationRounded';\nimport { useT } from '../../custom/hooks/useT';\nimport \"./style.scss\";\nimport baseAPI from '../../api/baseAPI';\nimport { AuthorsType, BooksWorldType, CategoriesType, LanguagesType } from '../../types';\nimport { authorUrl, bookUrl, categoryUrl, languageUrl } from '../../api/apiUrls';\nimport { Link } from 'react-router-dom';\nimport CategoriesFilterCard from '../../components/CategoriesFilterCard';\nimport EmptySearchResult from '../EmptySearchResult';\n\nexport type SimpleObjectType = {\n  [key: string]: any\n}\n\nfunction BooksWorld() {\n  const { t } = useT();\n  const [categories, setCategories] = useState<CategoriesType>();\n  const [languages, setLanguages] = useState<LanguagesType>();\n  const [authors, setAuthors] = useState<AuthorsType>();\n  const [booksWorld, setBooksWorld] = useState<BooksWorldType>();\n  const [page, setPage] = useState<number>(1);\n  const [filters, setFilters] = useState<{ category?: SimpleObjectType, author?: SimpleObjectType, language?: SimpleObjectType }>({\n    category: {},\n    author: {},\n    language: {}\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>, value: number) => {\n    setPage(value);\n  };\n\n  const getBooksWorld = useCallback((filter) => {\n    console.log(\"filter\", filter);\n\n    const checkedCategories = Object.keys(filter['category']).filter(key => filter['category'][key]).join(\",\");\n\n    const checkedLanguages = Object.keys(filter['language']).filter(key => filter['language'][key]).join(\",\");\n\n    const checkedAuthors = Object.keys(filter['author']).filter(key => filter['author'][key]).join(\",\");\n\n    baseAPI\n      .fetchWithPagination<BooksWorldType>({ url: bookUrl, params: { category: checkedCategories, language: checkedLanguages, author: checkedAuthors }, page })\n      .then(res => {\n        setBooksWorld(res.data);\n      })\n  }, [page]);\n\n  const getCategories = useCallback(() => {\n    baseAPI\n      .fetchAll<CategoriesType>(categoryUrl)\n      .then(res => {\n        setCategories(res.data);\n      })\n      .catch(error => console.log(\"error\", error));\n  }, [])\n\n  const getLanguages = useCallback(() => {\n    baseAPI\n      .fetchAll<LanguagesType>(languageUrl)\n      .then(res => {\n        setLanguages(res.data);\n      })\n      .catch(error => console.log(\"error\", error));\n  }, [])\n\n  const getAuthors = useCallback(() => {\n    baseAPI\n      .fetchAll<AuthorsType>(authorUrl)\n      .then(res => {\n        setAuthors(res.data);\n      })\n      .catch(error => console.log(\"error\", error));\n  }, [])\n\n  useEffect(() => {\n    getBooksWorld(filters);\n  }, [getBooksWorld, filters])\n\n  useEffect(() => {\n    getCategories();\n    getLanguages();\n    getAuthors();\n  }, [getCategories, getLanguages, getAuthors]);\n\n  const handleChangeItemCheck = (name: 'category' | 'author' | 'language') => (obj: SimpleObjectType) => {\n    setFilters(filter => ({\n      ...filter,\n      [name]: {\n        ...(filter[name] || {}),\n        ...obj\n      }\n    }))\n  }\n\n  // pagination almashganda tepaga otish \n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    })\n  }, [page])\n\n  return (\n    <section className=\"book_world pb-5\">\n      <Container>\n        <Row>\n          <h2 className=\"title my-4\">\n            {t(\"booksWorld\")}\n          </h2>\n        </Row>\n        <Row className=\"book_world_row\">\n          <Col lg={9}>\n            <div className=\"left\">\n              <Row>\n                {\n                  booksWorld?.results.length !== 0 ?\n                    booksWorld?.results.map((book, idx) => (\n                      <Col key={idx} lg={4} md={6} className=\"mb-3\">\n                        <Link to={`/booksWorld/:${book.id}`}>\n\n                          <BookCard image={book.image} author={book.author} title={book.title} />\n                        </Link>\n                      </Col>\n                    )) : (\n                      <EmptySearchResult isButton={false} searchKey=\"\" />\n                    )\n                }\n              </Row>\n            </div>\n            <Row>\n              {\n                booksWorld && booksWorld?.num_pages > 1 ?\n                  (\n                    <PaginationRounded handleChange={handleChange} page={page} count={booksWorld?.num_pages} />\n                  ) : null\n              }\n            </Row>\n          </Col>\n          <Col lg={3}>\n            <div className=\"filter_card_wrapper\">\n              <CategoriesFilterCard\n                onCategoryChange={handleChangeItemCheck('category')}\n                className=\"sections\"\n                title=\"sections\"\n                checkboxes={categories}\n              />\n              <CategoriesFilterCard\n                onCategoryChange={handleChangeItemCheck('language')}\n                className=\"languages\"\n                title={\"languages\"}\n                checkboxes={languages}\n              />\n              <AuthorsFilterCard\n                onCategoryChange={handleChangeItemCheck('author')}\n                className=\"languages\"\n                title={\"authors\"}\n                checkboxes={authors}\n              />\n\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n\nexport default BooksWorld","import React from 'react'\nimport { Col, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useT } from '../../custom/hooks/useT'\nimport \"./style.scss\";\n\ninterface IEmptySearchResult {\n  searchKey: string,\n  isButton: boolean\n}\n\nfunction EmptySearchResult(props: IEmptySearchResult) {\n  const { searchKey, isButton } = props;\n  const { t, lang } = useT();\n\n  let search_key = searchKey !== \"\" ? `\"${searchKey}\"` : null\n\n  return (\n    <div className=\"empty_search\">\n      <Row>\n        <div className=\"image_area\">\n          <figure>\n            <img src=\"/assets/img/search_result_not_found.png\" alt=\"not found\" />\n          </figure>\n        </div>\n      </Row>\n      <Row>\n        <div className=\"content_area\">\n          <h2 className=\"title text-center text-dark\">\n            {t(\"noFound\")} {search_key}\n          </h2>\n          <p className=\"atricle_content text-dark text-center\">\n            {t(\"pleaseTryAgain\")}\n          </p>\n          {\n            isButton ? (\n              <div className=\"button_area\">\n                <Link to={\"/\"}>\n                  {t(\"goBackToHome\")}\n                </Link>\n              </div>\n            ) : null\n          }\n        </div>\n      </Row>\n    </div>\n  )\n}\n\nexport default EmptySearchResult"],"names":["categoryUrl","languageUrl","authorUrl","bookUrl","audioBookUrl","photoUrl","wiseWordUrl","mediaUrl","articleUrl","allBookUrl","request","axios","baseURL","API_BASE_URL","headers","Accept","getLang","baseAPI","find","id","url","get","fetchAll","data","res","fetchWithParams","params","fetchWithPagination","page","props","t","useT","title","checkboxes","className","onCategoryChange","handleChange","event","target","name","checked","Divider","Form","map","checkbox","idx","FormControlLabel","control","Checkbox","onChange","label","full_name","image","author","Card","style","width","variant","src","FormGroup","PaginationRounded","count","Stack","spacing","Pagination","shape","useState","categories","setCategories","languages","setLanguages","authors","setAuthors","booksWorld","setBooksWorld","setPage","category","language","filters","setFilters","getBooksWorld","useCallback","filter","console","log","checkedCategories","Object","keys","key","join","checkedLanguages","checkedAuthors","then","getCategories","catch","error","getLanguages","getAuthors","useEffect","handleChangeItemCheck","obj","window","scrollTo","top","behavior","Container","Row","Col","lg","results","length","book","md","to","BookCard","EmptySearchResult","isButton","searchKey","num_pages","value","CategoriesFilterCard","AuthorsFilterCard","search_key","lang","alt"],"sourceRoot":""}