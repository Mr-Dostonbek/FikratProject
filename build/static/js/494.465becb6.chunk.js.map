{"version":3,"file":"static/js/494.465becb6.chunk.js","mappings":"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","sources":["api/apiUrls.ts","api/config.ts","api/baseAPI.ts","components/PaginationRounded/index.tsx","pages/WiseWords/index.tsx"],"sourcesContent":["export const categoryUrl = \"/category\";\nexport const languageUrl = \"/language\";\nexport const authorUrl = \"/author\";\nexport const bookUrl = \"/book\";\nexport const audioBookUrl = \"/audio-book\";\nexport const photoUrl = \"/photo\";\nexport const wiseWordUrl = \"/proverb\";\nexport const mediaUrl = \"/media\";\nexport const articleAuthorUrl = \"/article-author\";\nexport const articleUrl = \"/article\";\nexport const allBookUrl = \"/all-book\";","\nimport axios from \"axios\";\nimport { API_BASE_URL } from \"../constants\";\nimport { getLang } from \"../helpers\";\n\nexport const request = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    Accept: 'application/json',\n    \"Accept-Language\": getLang()\n  }\n  // timeout: 10000,\n});\n\n// request.interceptors.request.use((config) => {\n//   config.headers.Authorization = 'Bearer ' + getAccessToken()\n//   return config;\n// })","import { AxiosPromise } from \"axios\";\n// import { PER_PAGE } from \"../constants\";\nimport { request } from \"./config\";\n\ntype FetchWithPaginationType = {\n  url: string;\n  page?: number;\n  params?: object;\n}\n\ninterface IBaseApi {\n  find<T>(id: string | undefined, url: string, showNotification?: boolean): AxiosPromise<T>;\n  fetchAll<T>(url: string, data?: object): AxiosPromise<T>;\n  fetchWithParams<T>(url: string, params: object): AxiosPromise<T>;\n  fetchWithPagination<T>(args: FetchWithPaginationType): AxiosPromise<T>;\n}\n\n\nconst baseAPI: IBaseApi = {\n  find<T>(id: string, url: string) {\n    return request.get<T>(`${url}/${id}`);\n  },\n  async fetchAll<T>(url: string, data: object = {}) {\n    const res = await request.get<T>(url, data,);\n    return res;\n  },\n  async fetchWithParams<T>(url: string, params: object = {}) {\n    const res = await request.get<T>(url, { params },);\n    return res;\n  },\n  async fetchWithPagination<T>({\n    url,\n    page = 1,\n    params = {},\n\n  }: FetchWithPaginationType) {\n    const res = await request.get<T>(url, {\n      params: { ...params, page },\n    });\n    return res;\n  }\n}\n\nexport default baseAPI;","import * as React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport \"./style.scss\";\n\ninterface IPaginationRounded {\n  count: number | undefined,\n  handleChange: (event: any, value: number) => void,\n  page: number\n}\n\nexport default function PaginationRounded(props: IPaginationRounded) {\n  const { count, handleChange, page } = props;\n  return (\n    <div className={\"pagination_wrapper\"}>\n      <Stack spacing={2}>\n        <Pagination onChange={handleChange} page={page} count={count} variant=\"outlined\" shape=\"rounded\" />\n      </Stack>\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { wiseWordUrl } from '../../api/apiUrls';\nimport baseAPI from '../../api/baseAPI';\nimport Loading from '../../components/Loading';\nimport PaginationRounded from '../../components/PaginationRounded';\nimport { useT } from \"../../custom/hooks/useT\";\nimport { WiseWordsType } from '../../types';\nimport \"./style.scss\";\n\nfunction WiseWords() {\n  const { t } = useT();\n  const [loading, setLoading] = useState(false);\n  const [wiseWords, setWiseWords] = useState<WiseWordsType>();\n  const [page, setPage] = useState<number>(1);\n\n  const handleChange = (event: any, value: number) => {\n    setPage(value);\n  };\n\n  const getWiseWords = useCallback(async () => {\n    setLoading(true);\n    baseAPI.fetchWithPagination<WiseWordsType>({ url: wiseWordUrl, page })\n      .then(res => {\n        setWiseWords(res.data)\n        setLoading(false)\n      })\n      .catch(error => console.log(\"error\", error))\n  }, [page])\n\n  useEffect(() => {\n    getWiseWords()\n  }, [getWiseWords])\n\n\n  // pagination almashganda tepaga otish \n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    })\n  }, [page])\n\n  return (\n    <section className=\"wise_words pb-5\">\n      <Container>\n        <Row>\n          <h2 className=\"title text-dark\">\n            {t(\"proverbPicture\")}\n          </h2>\n        </Row>\n        <Row>\n          {\n            loading ? (\n              <Loading height=\"400px\" />\n            ) :\n              wiseWords?.results?.map((result, idx) => (\n                <Col key={idx} lg={3} md={4} sm={6}>\n                  <div className=\"foto_card\">\n                    <figure>\n                      <img src={result.image} alt=\"Rasmdagi hikmatlar\" />\n                    </figure>\n                  </div>\n                </Col>\n              ))\n          }\n        </Row>\n        <Row>\n          {\n            wiseWords && wiseWords?.num_pages > 1 ? (\n              <PaginationRounded handleChange={handleChange} page={page} count={wiseWords?.num_pages} />\n            ) : null\n          }\n        </Row>\n      </Container>\n    </section>\n  )\n}\n\nexport default WiseWords\n"],"names":["categoryUrl","languageUrl","authorUrl","bookUrl","audioBookUrl","photoUrl","wiseWordUrl","mediaUrl","articleUrl","allBookUrl","request","axios","baseURL","API_BASE_URL","headers","Accept","getLang","baseAPI","find","id","url","get","fetchAll","data","res","fetchWithParams","params","fetchWithPagination","page","PaginationRounded","props","count","handleChange","className","Stack","spacing","Pagination","onChange","variant","shape","t","useT","useState","loading","setLoading","wiseWords","setWiseWords","setPage","getWiseWords","useCallback","then","catch","error","console","log","useEffect","window","scrollTo","top","behavior","Container","Row","Loading","height","results","map","result","idx","Col","lg","md","sm","src","image","alt","num_pages","event","value"],"sourceRoot":""}